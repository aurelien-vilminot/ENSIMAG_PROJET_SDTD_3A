apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kzookeeper
  template:
    metadata:
      labels:
        app: kzookeeper
    spec:
      containers:
        - name: zookeeper
          imagePullPolicy: Always
          image: thecsmine/sdtd:zookeeper
          resources:
            requests:
              cpu: "0.1"
              ephemeral-storage: "100Mi"
              memory: "64Mi"
            limits:
              cpu: "0.3"
              ephemeral-storage: "600Mi"
              memory: "128Mi"
          tty: true
          ports:
            - containerPort: 2181
          volumeMounts:
            - name: kafka-volume
              mountPath: /mnt/kafka
  volumeClaimTemplates:
    - metadata:
        name: kafka-volume
      spec:
        resources:
          requests:
            storage: "1Gi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kbroker
  template:
    metadata:
      labels:
        app: kbroker
    spec:
      containers:
        - name: broker
          imagePullPolicy: Always
          image: thecsmine/sdtd:broker
          resources:
            requests:
              cpu: "0.1"
              ephemeral-storage: "100Mi"
              memory: "64Mi"
            limits:
              cpu: "0.3"
              ephemeral-storage: "600Mi"
              memory: "128Mi"
          tty: true
          ports:
            - containerPort: 9092
          volumeMounts:
            - name: broker-volume
              mountPath: /mnt/broker
  volumeClaimTemplates:
    - metadata:
        name: broker-volume
      spec:
        resources:
          requests:
            storage: "1Gi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kconsumer
  template:
    metadata:
      labels:
        app: kconsumer
    spec:
      containers:
        - name: consumer
          imagePullPolicy: Always
          image: thecsmine/sdtd:consumer
          resources:
            requests:
              cpu: "0.1"
              ephemeral-storage: "100Mi"
              memory: "64Mi"
            limits:
              cpu: "0.3"
              ephemeral-storage: "600Mi"
              memory: "128Mi"
          tty: true
          volumeMounts:
            - name: consumer-volume
              mountPath: /mnt/consumer
  volumeClaimTemplates:
    - metadata:
        name: consumer-volume
      spec:
        resources:
          requests:
            storage: "1Gi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-producer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kproducer
  template:
    metadata:
      labels:
        app: kproducer
    spec:
      containers:
        - name: producer
          imagePullPolicy: Always
          image: thecsmine/sdtd:producer
          resources:
            requests:
              cpu: "0.1"
              ephemeral-storage: "100Mi"
              memory: "64Mi"
            limits:
              cpu: "0.3"
              ephemeral-storage: "600Mi"
              memory: "128Mi"
          tty: true
          volumeMounts:
            - name: producer-volume
              mountPath: /mnt/producer
  volumeClaimTemplates:
    - metadata:
        name: producer-volume
      spec:
        resources:
          requests:
            storage: "1Gi"

---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    app: zookeeper
spec:
  ports:
    - port: 2181
      protocol: TCP
      targetPort: 2181
  selector:
    app: kzookeeper
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: broker
  labels:
    app: broker
spec:
  ports:
    - port: 9092
      protocol: TCP
      targetPort: 9092
  selector:
    app: kbroker
  type: NodePort